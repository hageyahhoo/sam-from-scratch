AWSTemplateFormatVersion: '2010-09-09'

Resources:
  # Role and policies
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-ex
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaExPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: DynamoDBScanning
              Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Servant
            - Sid: DynamoDBLogging
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:*
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            - Sid: LogGroupCreation
              Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: '*'

  # Lambda Function
  SamScratchFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: samScratch
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/samscratch/service:latest
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 30
      TracingConfig:
          Mode: Active
